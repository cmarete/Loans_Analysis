create database data_analysis_db;

use database data_analysis_db; 

create table members(
	member_id int not null auto_increment,
	first_name varchar(20),
    last_name varchar(20),
    address varchar(20), 
    zipcode varchar(20),
    state varchar(20),
    primary key(member_id)
);

create table loans(
	loan_id int not null auto_increment,
	loan_type varchar(20),
	term varchar(20),
	int_rate numeric,
	grade varchar(20),
	sub_grade varchar(20),
	primary key(loan_id)
); 

create table payment_plans(
    payment_plan_id int not null auto_increment,
    payment_plan varchar(20),
    term varchar(20),
    primary key(payment_plan_id)
); 

create table transactions(
	loan_id int not null,
	member_id int not null,
	payment_plan_id int,
	payment_amount bigint,
	initial_date date,
	closing_date date,
	is_active boolean,
    primary key(loan_id, member_id, payment_id)
);

create table payments(
	payment_id int not null,
	payment_plan_id int,
	transaction_id int not null,
	scheduled_date date,
	closing_date date,
    primary key(payment_id)
); 

--intial data load
--create base table then use Data Transfer feature in DBeaver to import csv to loans table
create table loans(
id int,
member_id int,
loan_amnt int,
funded_amnt int,
funded_amnt_inv int,
term text, 
int_rate int,
installment int,
grade text,
sub_grade text,
emp_title text, 
emp_length text,
home_ownership text,
annual_inc int,
verification_status text,
issue_d date,
loan_status text,
pymnt_plan text,
url text,
descr text,
purpose text,
title text,
zip_code text,
addr_state text,
dti int,
delinq_2yrs int,
earliest_cr_line date,
inq_last_6mths int,
mths_since_last_delinq int,
mths_since_last_record int,
open_acc int,
pub_rec int,
revol_bal int,
revol_util int,
total_acc int,
initial_list_status text,
out_prncp int,
out_prncp_inv int,
total_pymnt int,
total_pymnt_inv int,
total_rec_prncp int,
total_rec_int int,
total_rec_late_fee numeric,
recoveries int,
collection_recovery_fee int,
last_pymnt_d date,
last_pymnt_amnt int,
next_pymnt_d date, 
last_credit_pull_d date,
collections_12_mths_ex_med int,
mths_since_last_major_derog2 int,
policy_code int,
application_type text,
annual_inc_joint int,
dti_joint int,
verification_status_joint text,
acc_now_delinq int,
tot_coll_amt int,
tot_cur_bal int,
open_acc_6m int,
open_act_il int,
open_il_12m int,
open_il_24m int,
mths_since_rcnt_il int,
total_bal_il int,
il_util int,
open_rv_12m int,
open_rv_24m int,
max_bal_bc int,
all_util int,
total_rev_hi_lim int,
inq_fi int,
total_cu_tl int,
inq_last_12m int,
acc_open_past_24mths int,
avg_cur_bal int,
bc_open_to_buy int,
bc_util int,
chargeoff_within_12_mths int,
delinq_amnt int,
mo_sin_old_il_acct int,
mo_sin_old_rev_tl_op int,
mo_sin_rcnt_rev_tl_op int,
mo_sin_rcnt_tl int,
mort_acc int,
mths_since_recent_bc int,
mths_since_recent_bc_dlq int,
mths_since_recent_inq int,
mths_since_recent_revol_delinq int,
num_accts_ever_120_pd int,
num_actv_bc_tl int,
num_actv_rev_tl int,
num_bc_sats int,
num_bc_tl int,
num_il_tl int,
num_op_rev_tl int,
num_rev_accts int,
num_rev_tl_bal_gt_0 int,
num_sats int,
num_tl_120dpd_2m int,
num_tl_30dpd int,
num_tl_90g_dpd_24m int,
num_tl_op_past_12m int,
pct_tl_nvr_dlq int,
percent_bc_gt_75 int,
pub_rec_bankruptcies int,
tax_liens int,
tot_hi_cred_lim int,
total_bal_ex_mort int,
total_bc_limit int,
total_il_high_credit_limit int,
revol_bal_joint int,
sec_app_earliest_cr_line date,
sec_app_inq_last_6mths int,
sec_app_mort_acc int,
sec_app_open_acc int,
sec_app_revol_util int,
sec_app_open_act_il int,
sec_app_num_rev_accts int,
sec_app_chargeoff_within_12_mths int,
sec_app_collections_12_mths_ex_med int,
sec_app_mths_since_last_major_derog int,
hardship_flag text, 
hardship_type int,
hardship_reason text,
hardship_status text,
deferral_term text,
hardship_amount int,
hardship_start_date date, 
hardship_end_date date, 
payment_plan_start_date date,
hardship_length int,
hardship_dpd int,
hardship_loan_status text, 
orig_projected_additional_accrued_interest text,
hardship_payoff_balance_amount text,
hardship_last_payment_amount text,
disbursement_method text,
debt_settlement_flag text,
debt_settlement_flag_date date, 
settlement_status text, 
settlement_date date,
settlement_amount int, 
settlement_percentage int, 
settlement_term int
); 

--assuming I can get first_name and last_name from another data source
--memmbers would be backfilled like so
insert into members(member_id,zipcode,state)
select member_id, zip_code, addr_state from loans; 

insert into payment_plans(payment_plan,term)
select pymnt_plan, term from loans; 

